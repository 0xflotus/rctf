name: CI
on:
  push:
    branches: [master]
  pull_request:

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Shellcheck
      run: |
        shellcheck install/*.sh

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Install dependencies
      run: |
        yarn install --frozen-lockfile

    - name: Lint
      run: |
        yarn lint --max-warnings=0

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12]
        postgres: [12]
        redis: [6]
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
      redis:
        image: redis:${{ matrix.redis }}
        ports:
          - 6379:6379
    env:
      RCTF_DATABASE_URL: postgres://postgres:password@localhost/rctf
      RCTF_REDIS_URL: redis://@localhost:6379/0
      RCTF_TOKEN_KEY: 32_byte_long_base64_encoded_value_for_token
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Install dependencies
      run: |
        yarn install --frozen-lockfile

    - name: Build
      run: |
        yarn build

    - name: Create DB
      run: |
        psql postgres://postgres:password@localhost -c 'CREATE DATABASE rctf;'

    - name: Run migrations
      run: |
        yarn migrate

    - name: Run tests
      id: testrun
      run: |
        yarn test:report --ci --forceExit --color

    - name: Upload coverage reports
      if: always() && ((steps.testrun.outcome == 'success') || (steps.testrun.outcome == 'failure'))
      uses: codecov/codecov-action@v1

  docker-build:
    runs-on: ubuntu-latest
    # TODO: handle tagging releases correctly
    if: github.ref == 'refs/heads/master'
    needs:
      - shellcheck
      - lint
      - test

    steps:
    - uses: actions/checkout@v2

    - name: Build & push
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASS }}
        repository: redpwn/rctf
        # TODO: handle tagging releases correctly
        tags: master,${{ github.sha }}
        # TODO: add cache_froms once we have full releases
